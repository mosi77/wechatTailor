jdbc.driver=com.mysql.jdbc.Driver
jdbc.url=jdbc:mysql://139.196.26.112:3306/anyanp3?useUnicode=true&amp;characterEncoding=UTF-8
jdbc.username=root
jdbc.password=anyantestpwd

#<!-- 配置连接池数量初始化大小、最小、最大 -->
jdbc.initialPoolSize = 5
jdbc.minPoolSize=5
jdbc.maxPoolSize=1000

# 获取连接时最大等待时间，单位毫秒。配置了maxWait之后，
# 缺省启用公平锁，并发效率会有所下降，
# 如果需要可以通过配置useUnfairLock属性为true使用非公平锁。
jdbc.maxWait=60000

# 是否缓存preparedStatement，也就是PSCache。
# PSCache对支持游标的数据库性能提升巨大，比如说oracle。
# 在mysql5.5以下的版本中没有PSCache功能，建议关闭掉。
# 作者在5.5版本中使用PSCache，通过监控界面发现PSCache有缓存命中率记录，
# 该应该是支持PSCache。
jdbc.poolPreparedStatements = true

# 要启用PSCache，必须配置大于0，当大于0时，
# poolPreparedStatements自动触发修改为true。
# 在Druid中，不会存在Oracle下PSCache占用内存过多的问题，
# 可以把这个数值配置大一些，比如说100
jdbc.maxOpenPreparedStatements = 20

# 用来检测连接是否有效的sql，要求是一个查询语句。
# 如果validationQuery为null，testOnBorrow、testOnReturn、
# testWhileIdle都不会其作用。
jdbc.validationQuery = SELECT 'x'

# 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
jdbc.testOnBorrow = false

# 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
jdbc.testOnReturn = false

#  	建议配置为true，不影响性能，并且保证安全性。
# 申请连接的时候检测，如果空闲时间大于
# timeBetweenEvictionRunsMillis，
# 执行validationQuery检测连接是否有效。
jdbc.testWhileIdle = true

#  	  	有两个含义：
# 1) Destroy线程会检测连接的间隔时间
# 2) testWhileIdle的判断依据，详细看testWhileIdle属性的说明
jdbc.timeBetweenEvictionRunsMillis = 60000

# 配置一个连接在池中最小生存的时间，单位是毫秒
jdbc.minEvictableIdleTimeMillis = 60000


# connectionInitSqls 	  	物理连接初始化的时候执行的sql


# exceptionSorter 	根据dbType自动识别 	当数据库抛出一些不可恢复的异常时，抛弃连接

# filters 	  	属性类型是字符串，通过别名的方式配置扩展插件
# 常用的插件有：
# 监控统计用的filter:stat
# 日志用的filter:log4j
# 防御sql注入的filter:wall
jdbc.filters = stat

# proxyFilters 	  	类型是List<com.alibaba.druid.filter.Filter>，
# 如果同时配置了filters和proxyFilters，
# 是组合关系，并非替换关系
