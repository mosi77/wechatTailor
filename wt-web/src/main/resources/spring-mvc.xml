<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="   
           http://www.springframework.org/schema/beans   
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd   
           http://www.springframework.org/schema/context   
           http://www.springframework.org/schema/context/spring-context-3.0.xsd  
           http://www.springframework.org/schema/mvc   
           http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
           http://www.springframework.org/schema/aop
           http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

	<!-- 启动扫描所有的controller -->
	<context:component-scan base-package="com.dl.service">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
     
    <!--  主要作用于@Controller，激活该模式
	     下面是一种简写形式，完全可以手动配置替代这种简写形式；
	      它会自动注册DefaultAnnotationHandlerMapping与AnnotationMethodHandlerAdapter 两个bean,
	        是spring MVC为@Controllers分发请求所必须的
     -->
    <mvc:annotation-driven/>
    
    <!-- 开启切面代理 使得spring认识 @Aspect -->
	<aop:aspectj-autoproxy proxy-target-class="true"/>
    
    <!-- 配置js，css等静态文件直接映射到对应的文件夹，不被DispatcherServlet处理 -->
    <mvc:resources location="/WEB-INF/resources/" mapping="/resources"/>
     
    <!-- jsp页面解析器，当Controller返回XXX字符串时，先通过拦截器，然后该类就会在/WEB-INF/views/目录下，查找XXX.jsp文件-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
     <property name="prefix" value="/WEB-INF/pages/"></property>
     <property name="suffix" value=".jsp"></property>
    </bean>
    
    <!-- 配置springMVC中返回JSON字符串 -->
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping" />  
	<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">  
	    <property name="messageConverters">  
	        <list>  
	            <bean class="org.springframework.http.converter.StringHttpMessageConverter">  
	                <property name="supportedMediaTypes">  
	                    <list>  
	                        <value>text/html; charset=UTF-8</value>  
	                        <value>text/plain;charset=UTF-8</value>
	                        <value>application/json;charset=UTF-8</value>  
	                    </list>  
	                </property>  
	            </bean>  
	            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">  
	                <property name="supportedMediaTypes">  
	                    <list>  
	                        <value>text/html; charset=UTF-8</value>  
	                        <value>application/json;charset=UTF-8</value>
	                    </list>  
	                </property>  
	            </bean>  
	        </list>  
	    </property>  
	</bean>  
	
	<!-- 文件上传配置 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="defaultEncoding" value="utf-8" />
        <!--<property name="maxUploadSize" value="10485760"/>  最大文件大小10M -->
        <property name="maxInMemorySize" value="4096"/>

    </bean>
    
    <!-- 对静态资源文件的访问  方案一 （二选一） -->  
    <mvc:default-servlet-handler/>  
      
    <!-- 对静态资源文件的访问  方案二 （二选一）  
    <mvc:resources mapping="/images/**" location="/images/" cache-period="31556926"/>  
    <mvc:resources mapping="/js/**" location="/js/" cache-period="31556926"/>  
    <mvc:resources mapping="/css/**" location="/css/" cache-period="31556926"/>
    -->
    
</beans>